import httpx


class Api:
    """
    Класс Api отвечает за взаимодействие с внешним API.
    Содержит методы для получения данных и извлечения нужных значений из ответа.
    """

    def fetch_data(self, url: str) -> dict:
        """
        Делает GET-запрос к API и возвращает JSON-ответ.

        Аргументы:
            url (str): адрес API, по которому отправляется запрос.

        Возвращает:
            dict: данные из JSON-ответа (если запрос успешный),
                  пустой словарь в случае ошибки.
        """
        try:
            # Выполняем GET-запрос с таймаутом 30 секунд
            response = httpx.get(url, timeout=30)

            # Проверяем успешность ответа (если статус не 200 — вызывает исключение)
            response.raise_for_status()

            # Возвращаем JSON-ответ в виде словаря
            return response.json()

        except Exception as e:
            # Если произошла любая ошибка (например, недоступен сервер или неверный JSON)
            print(f"Ошибка при запросе: {e}")

            # Возвращаем пустой словарь, чтобы программа не упала
            return {}

    def get_facet_ids(self, url: str):
        """
        Получает список идентификаторов событий (event_id) и их количество.

        Аргументы:
            url (str): адрес API для получения данных.

        Возвращает:
            tuple: (count_id, event_ids)
                - count_id (int): количество событий.
                - event_ids (list): список всех ID событий по порядку.
        """
        # Получаем данные с API с помощью метода fetch_data()
        data = self.fetch_data(url)

        # Вычисляем количество записей (длина полученного списка)
        count_id = len(data)

        # Извлекаем все значения "id" из списка событий
        event_ids = [event["id"] for event in data]

        # Возвращаем количество событий и список ID
        return count_id, event_ids

